// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using securityservice.Data;
using System;

namespace securityservice.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180420170453_ChangedForPasswordHashing")]
    partial class ChangedForPasswordHashing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("securityservice.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool?>("enabled")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(280);

                    b.Property<int?>("userGroupId");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("userId");

                    b.HasIndex("userGroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("securityservice.Model.UserGroup", b =>
                {
                    b.Property<int>("userGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .HasMaxLength(100);

                    b.Property<bool?>("enabled")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string[]>("permissions");

                    b.HasKey("userGroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("securityservice.Model.User", b =>
                {
                    b.HasOne("securityservice.Model.UserGroup", "userGroup")
                        .WithMany("users")
                        .HasForeignKey("userGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
